NEXTUP:
-type safety in box connections (enum that is set at box creation, check connections)
-get rid of string matching for port selection

TODO:
-make a types header
-think hard about port opening/closing; current implementation is confusing (without multithreading, this is probably only relevant for multithreading and getting the network to run)
-add parameter ports (open parameter port an easy way to start the network running)
-add error ports (they could handle the thrown errors)
-if we keep boost::variant, need to handle the bad gets
-probably need pImpl everywhere eventually
-get rid of string matching for everything (one problem at a time . . .)


QUESTIONS:
-boost::variant the best way to handle the packets?  boost::get seems fine if we aren't manipulating the packet contents, and we cannot use visitors anyway because they are designed to avoid exposing the contents
-who should manage port openings/closing?  At the port level, or at component level?
-hide the port implementation?
-consolidate in Ports?  would clean things up (1 port map instead of input/output maps), but safety could be an issue, as you could potentially hook things up backwards
-worried about dangerous stuff with my map of boxes; I think I need some kind of container of pointers because Container is abstract, though
-boost::ptr_map may be a bad idea b/c it internally uses void* as the pointer storage
